import os
from aiogram import types
from keyboards import back_to_menu_button, understood_button
from handlers.emergency import EMERGENCY_PHOTO

async def show_hotlines(message: types.Message):
    """–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥–∞ –∑ —Ñ–æ—Ç–æ"""
    try:
        if os.path.exists(EMERGENCY_PHOTO):
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ –±–µ–∑ open()
            await message.answer_photo(
                photo=types.FSInputFile(EMERGENCY_PHOTO),
                caption=(
                    "–Ø–∫—â–æ —Ç–æ–±—ñ –∑–∞—Ä–∞–∑ –≤–∞–∂–∫–æ –∞–±–æ —Ç–∏ –ø–æ—Ç—Ä–µ–±—É—î—à —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—ó –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ ‚Äî –æ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–∏ "
                    "\"<b>–≥–∞—Ä—è—á–∏—Ö –ª—ñ–Ω—ñ–π</b>\"\n\n"
                    "–ü–∞–º'—è—Ç–∞–π, —Ç–∏ –Ω–µ —Å–∞–º/—Å–∞–º–∞ ‚ù§Ô∏è‚Äçüî•\n\n"
                ),
                reply_markup=back_to_menu_button()
            )
        else:
            raise FileNotFoundError("–§–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
    except Exception:
        await message.answer(
            "–Ø–∫—â–æ —Ç–æ–±—ñ –∑–∞—Ä–∞–∑ –≤–∞–∂–∫–æ –∞–±–æ —Ç–∏ –ø–æ—Ç—Ä–µ–±—É—î—à —Ç–µ—Ä–º—ñ–Ω–æ–≤–æ—ó –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏ ‚Äî –æ—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–∏ "
            "\"–≥–∞—Ä—è—á–∏—Ö –ª—ñ–Ω—ñ–π\"\n\n"
            "–ü–∞–º'—è—Ç–∞–π, —Ç–∏ –Ω–µ —Å–∞–º/—Å–∞–º–∞ ‚ù§Ô∏è‚Äçüî•\n\n",
            reply_markup=back_to_menu_button()
        )

async def calm_exercises(message: types.Message):
    """–ú–µ–¥–∏—Ç–∞—Ü—ñ—è"""
    await message.answer(
        "–Ø –∑–Ω–∞—é, –±—É–≤–∞—î –≤–∞–∂–∫–æ –∑—É–ø–∏–Ω–∏—Ç–∏—Å—å, –∞–ª–µ –¥–∞–≤–∞–π —Å–ø—Ä–æ–±—É—î–º–æ —Ä–∞–∑–æ–º —Ç—Ä–æ—Ö–∏ –≤–∏–¥–∏—Ö–Ω—É—Ç–∏ –π –≤—ñ–¥–ø–æ—á–∏—Ç–∏ü´Ç\n\n"
        "–û–±–µ—Ä–∏ –º–µ–¥–∏—Ç–∞—Ü—ñ—é –π –¥–∞–π —Å–æ–±—ñ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω —Ç–∏—à—ñüëá",
        reply_markup=back_to_menu_button()
    )
    
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∞—É–¥—ñ–æ—Ñ–∞–π–ª–∏ –º–µ–¥–∏—Ç–∞—Ü—ñ—ó
    await send_meditation_audios(message)

async def send_meditation_audios(message: types.Message):
    """–í—ñ–¥–ø—Ä–∞–≤–∫–∞ 3 –∞—É–¥—ñ–æ—Ñ–∞–π–ª—ñ–≤ –º–µ–¥–∏—Ç–∞—Ü—ñ—ó"""
    meditation_files = [
        {"path": "music/morning.mp3", "title": "–†–∞–Ω–∫–æ–≤–∞ –º–µ–¥–∏—Ç–∞—Ü—ñ—è '–ù–∞–ª–∞—à—Ç—É–π—Å—è –Ω–∞ –¥–µ–Ω—å'"},
        {"path": "music/safety place.mp3", "title": "–¢–≤–æ—î –±–µ–∑–ø–µ—á–Ω–µ –º—ñ—Å—Ü–µ"},
        {"path": "music/relaxation.mp3", "title": "–ú'—è–∫–µ —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è"},
    ]
    
    for audio in meditation_files:
        try:
            if os.path.exists(audio["path"]):
                # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ FSInputFile –∑–∞–º—ñ—Å—Ç—å InputFile
                await message.answer_audio(
                    audio=types.FSInputFile(audio["path"]),
                    caption=f"<b>{audio['title']}</b>",
                    parse_mode="HTML"
                )
            else:
                await message.answer(
                    f"‚ö†Ô∏è –ê—É–¥—ñ–æ—Ñ–∞–π–ª {audio['path']} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.\n"
                    f"<b>{audio['title']}</b>",
                    parse_mode="HTML"
                )
        except Exception as e:
            await message.answer(
                f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ {audio['title']}: {str(e)}"
            )
    
    await message.answer(
        "–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É –¥—ñ—é:",
        reply_markup=back_to_menu_button()
    )

async def distract_exercises(message: types.Message):
    """–í–ø—Ä–∞–≤–∏"""
    from keyboards import exercises_keyboard
    await message.answer(
        "–ó—ñ–±—Ä–∞–ª–∏ –¥–ª—è —Ç–µ–±–µ –ø—Ä–æ—Å—Ç—ñ –≤–ø—Ä–∞–≤–∏ –π –∫—ñ–ª—å–∫–∞ –ø—Ä–∏–∫–æ–ª—å–Ω–∏—Ö —Ä–æ–∑–≤–∞–≥, —â–æ–± –≤—ñ–¥–≤–æ–ª—ñ–∫—Ç–∏—Å—åüßò‚Äç‚ôÄ\n\n"
        "–û–±–µ—Ä–∏, —â–æ —Ü—ñ–∫–∞–≤–∏—Ç—å:",
        reply_markup=exercises_keyboard()
    )

async def library(message: types.Message):
    await message.answer("–ë—ñ–±–ª—ñ–æ—Ç–µ–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª", reply_markup=back_to_menu_button())

async def community_chat(message: types.Message):
    await message.answer("–ß–∞—Ç —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª", reply_markup=back_to_menu_button())