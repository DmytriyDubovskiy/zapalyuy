from aiogram import types
from aiogram.types import FSInputFile
from keyboards import back_to_menu_button, exercises_links_keyboard, exercises_practical_keyboard
import aiosqlite

# –î–æ–¥–∞–π—Ç–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ –∑ file_id —Ñ–æ—Ç–æ –¥–ª—è –≤–ø—Ä–∞–≤
EXERCISE_PHOTOS = {
    "lemon": FSInputFile("pics/lemon.jpg"),
    "balloon": FSInputFile("pics/balloon.jpg"),
    "square_breath": FSInputFile("pics/square_breath.jpg"),
    "movement": FSInputFile("pics/movement.jpg")
}

async def handle_exercises_callback(call: types.CallbackQuery):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤–ø—Ä–∞–≤"""
    if call.data == "dis_game":
        # –û–Ω–ª–∞–π–Ω-—ñ–≥—Ä–∏
        kb = types.InlineKeyboardMarkup(inline_keyboard=[
            [types.InlineKeyboardButton(text="ü´ß –õ–æ–ø–∞–π –±—É–ª—å–±–∞—à–∫–∏", url="https://bubblespop.netlify.app/")],
            [types.InlineKeyboardButton(text="üé® –†–æ–∑–º–∞–ª—å–æ–≤–∫–∞", url="https://share.google/x7tDo6h893JID5DVT")],
            [types.InlineKeyboardButton(text="ü¶ñ –î–∏–Ω–æ–∑–∞–≤—Ä–∏–∫", url="https://share.google/I9d3iCVj6lLPXa3N3")],
            [types.InlineKeyboardButton(text="üß™ –ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω—ñ —Ç–µ—Å—Ç–∏", url="https://share.google/rxVZ3vji3h8O5Kmzb")],
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_exercises")]
        ])
        await call.message.answer(
            "üéÆ <b>–û–Ω–ª–∞–π–Ω-—ñ–≥—Ä–∏ –¥–ª—è —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è:</b>\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –≥—Ä—É, —è–∫–∞ –≤–∞—Å –∑–∞—Ü—ñ–∫–∞–≤–∏—Ç—å:",
            reply_markup=kb
        )

    elif call.data == "dis_exercises":
        # –ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏
        await call.message.answer(
            "üßò‚Äç‚ôÄÔ∏è <b>–ü—Ä–∞–∫—Ç–∏—á–Ω—ñ –≤–ø—Ä–∞–≤–∏ –¥–ª—è —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è:</b>\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –≤–ø—Ä–∞–≤—É, —è–∫–∞ –≤–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è:",
            reply_markup=exercises_practical_keyboard()
        )

    elif call.data == "back_to_exercises":
        # –ü–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é –≤–ø—Ä–∞–≤
        from keyboards import exercises_keyboard
        await call.message.answer(
            "–ó—ñ–±—Ä–∞–ª–∏ –¥–ª—è —Ç–µ–±–µ –ø—Ä–æ—Å—Ç—ñ –≤–ø—Ä–∞–≤–∏ –π –∫—ñ–ª—å–∫–∞ –ø—Ä–∏–∫–æ–ª—å–Ω–∏—Ö —Ä–æ–∑–≤–∞–≥, —â–æ–± –≤—ñ–¥–≤–æ–ª—ñ–∫—Ç–∏—Å—åüßò‚Äç‚ôÄ\n\n"
            "–û–±–µ—Ä–∏, —â–æ —Ü—ñ–∫–∞–≤–∏—Ç—å:",
            reply_markup=exercises_keyboard()
        )

    # –û–±—Ä–æ–±–∫–∞ –ø—Ä–∞–∫—Ç–∏—á–Ω–∏—Ö –≤–ø—Ä–∞–≤
    elif call.data == "ex_lemon":
        try:
            await call.message.answer_photo(
                photo=EXERCISE_PHOTOS["lemon"],
                caption="üçã <b>–õ–∏–º–æ–Ω</b>\n\n"
                        "–£—è–≤–∏, —â–æ —Ç—Ä–∏–º–∞—î—à –ª–∏–º–æ–Ω. –°—Ç–∏—Å–Ω–∏ –∫—É–ª–∞–∫ —Ç–∞–∫, –Ω—ñ–±–∏ –≤–∏—á–∞–≤–ª—é—î—à —Å—ñ–∫, –ø–æ—Ç—ñ–º —Ä–æ–∑—Å–ª–∞–±. "
                        "–°–ø–æ—á–∞—Ç–∫—É –ø—Ä–∞–≤–æ—é, –ø–æ—Ç—ñ–º –ª—ñ–≤–æ—é —Ä—É–∫–æ—é. –¶–µ –¥–æ–ø–æ–º–∞–≥–∞—î –≤—ñ–¥—á—É—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é –º—ñ–∂ –Ω–∞–ø—Ä—É–≥–æ—é —ñ —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è–º.",
                reply_markup=back_to_menu_button()
            )
        except:
            await call.message.answer(
                "üçã <b>–õ–∏–º–æ–Ω</b>\n\n"
                "–£—è–≤–∏, —â–æ —Ç—Ä–∏–º–∞—î—à –ª–∏–º–æ–Ω. –°—Ç–∏—Å–Ω–∏ –∫—É–ª–∞–∫ —Ç–∞–∫, –Ω—ñ–±–∏ –≤–∏—á–∞–≤–ª—é—î—à —Å—ñ–∫, –ø–æ—Ç—ñ–º —Ä–æ–∑—Å–ª–∞–±. "
                "–°–ø–æ—á–∞—Ç–∫—É –ø—Ä–∞–≤–æ—é, –ø–æ—Ç—ñ–º –ª—ñ–≤–æ—é —Ä—É–∫–æ—é. –¶–µ –¥–æ–ø–æ–º–∞–≥–∞—î –≤—ñ–¥—á—É—Ç–∏ —Ä—ñ–∑–Ω–∏—Ü—é –º—ñ–∂ –Ω–∞–ø—Ä—É–≥–æ—é —ñ —Ä–æ–∑—Å–ª–∞–±–ª–µ–Ω–Ω—è–º.",
                reply_markup=back_to_menu_button()
            )

    elif call.data == "ex_balloon":
        try:
            await call.message.answer_photo(
                photo=EXERCISE_PHOTOS["balloon"],
                caption="üéà <b>–ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ –∫—É–ª—å–∫–∞</b>\n\n"
                        "–ü–æ–∫–ª–∞–¥–∏ —Ä—É–∫–∏ –Ω–∞ –∂–∏–≤—ñ—Ç. –£—è–≤–∏, —â–æ –≤—ñ–Ω ‚Äî –∫—É–ª—å–∫–∞. –ù–∞ –≤–¥–∏—Ö—É \"–Ω–∞–¥—É–≤–∞–π\" –π–æ–≥–æ, –Ω–∞ –≤–∏–¥–∏—Ö—É ‚Äî \"–∑–¥—É–≤–∞–π\".",
                reply_markup=back_to_menu_button()
            )
        except:
            await call.message.answer(
                "üéà <b>–ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ –∫—É–ª—å–∫–∞</b>\n\n"
                "–ü–æ–∫–ª–∞–¥–∏ —Ä—É–∫–∏ –Ω–∞ –∂–∏–≤—ñ—Ç. –£—è–≤–∏, —â–æ –≤—ñ–Ω ‚Äî –∫—É–ª—å–∫–∞. –ù–∞ –≤–¥–∏—Ö—É \"–Ω–∞–¥—É–≤–∞–π\" –π–æ–≥–æ, –Ω–∞ –≤–∏–¥–∏—Ö—É ‚Äî \"–∑–¥—É–≤–∞–π\".",
                reply_markup=back_to_menu_button()
            )

    elif call.data == "ex_square_breath":
        try:
            await call.message.answer_photo(
                photo=EXERCISE_PHOTOS["square_breath"],
                caption="‚¨õÔ∏è <b>–ö–≤–∞–¥—Ä–∞—Ç–Ω–µ –¥–∏—Ö–∞–Ω–Ω—è</b>\n\n"
                        "–£—è–≤–∏ –∫–≤–∞–¥—Ä–∞—Ç. –î–∏—Ö–∞–π –ø–æ –π–æ–≥–æ —Å—Ç–æ—Ä–æ–Ω–∞–º:\n\n"
                        "‚Ä¢ –≤–¥–∏—Ö (—Ä–∞—Ö—É–π –¥–æ 4)\n"
                        "‚Ä¢ –∑–∞—Ç—Ä–∏–º–∫–∞ (—Ä–∞—Ö—É–π –¥–æ 4)\n"
                        "‚Ä¢ –≤–∏–¥–∏—Ö (—Ä–∞—Ö—É–π –¥–æ 4)\n"
                        "‚Ä¢ –∑–∞—Ç—Ä–∏–º–∫–∞ (—Ä–∞—Ö—É–π –¥–æ 4)",
                reply_markup=back_to_menu_button()
            )
        except:
            await call.message.answer(
                "‚¨õÔ∏è <b>–ö–≤–∞–¥—Ä–∞—Ç–Ω–µ –¥–∏—Ö–∞–Ω–Ω—è</b>\n\n"
                "–£—è–≤–∏ –∫–≤–∞–¥—Ä–∞—Ç. –î–∏—Ö–∞–π –ø–æ –π–æ–≥–æ —Å—Ç–æ—Ä–æ–Ω–∞–º:\n\n"
                "‚Ä¢ –≤–¥–∏—Ö (—Ä–∞—Ö—É–π –¥–æ 4)\n"
                "‚Ä¢ –∑–∞—Ç—Ä–∏–º–∫–∞ (—Ä–∞—Ö—É–π –¥–æ 4)\n"
                "‚Ä¢ –≤–∏–¥–∏—Ö (—Ä–∞—Ö—É–π –¥–æ 4)\n"
                "‚Ä¢ –∑–∞—Ç—Ä–∏–º–∫–∞ (—Ä–∞—Ö—É–π –¥–æ 4)",
                reply_markup=back_to_menu_button()
            )

    elif call.data == "ex_movement":
        try:
            await call.message.answer_photo(
                photo=EXERCISE_PHOTOS["movement"],
                caption="üíÉ <b>–†—É—Ö</b>\n\n"
                        "–°—Ç–∞–Ω—å –∑—Ä—É—á–Ω–æ –Ω–∞ –æ–±–∏–¥–≤—ñ –Ω–æ–≥–∏. –ü–æ—á–Ω–∏ –º'—è–∫–æ —Ç—Ä—è—Å—Ç–∏ —Ä—É–∫–∞–º–∏, –Ω—ñ–±–∏ —Å—Ç—Ä—É—à—É—î—à –≤–æ–¥—É –∑ –ø–∞–ª—å—Ü—ñ–≤. "
                        "–ü–æ—Ç—ñ–º –ø—ñ–¥–∫–ª—é—á–∏ –ø–ª–µ—á—ñ, –Ω–æ–≥–∏, –≤—Å–µ —Ç—ñ–ª–æ. –î–æ–∑–≤–æ–ª—å —Å–æ–±—ñ ¬´–ø–æ—Ç—Ä—è—Å—Ç–∏—Å—è¬ª –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω ‚Äî "
                        "—Ç–∞–∫ –Ω—ñ–±–∏ –∑ —Ç–µ–±–µ —Å–ø–∞–¥–∞—î –≤–µ—Å—å –∑–∞–π–≤–∏–π —Å—Ç—Ä–µ—Å.",
                reply_markup=back_to_menu_button()
            )
        except:
            await call.message.answer(
                "üíÉ <b>–†—É—Ö</b>\n\n"
                "–°—Ç–∞–Ω—å –∑—Ä—É—á–Ω–æ –Ω–∞ –æ–±–∏–¥–≤—ñ –Ω–æ–≥–∏. –ü–æ—á–Ω–∏ –º'—è–∫–æ —Ç—Ä—è—Å—Ç–∏ —Ä—É–∫–∞–º–∏, –Ω—ñ–±–∏ —Å—Ç—Ä—É—à—É—î—à –≤–æ–¥—É –∑ –ø–∞–ª—å—Ü—ñ–≤. "
                "–ü–æ—Ç—ñ–º –ø—ñ–¥–∫–ª—é—á–∏ –ø–ª–µ—á—ñ, –Ω–æ–≥–∏, –≤—Å–µ —Ç—ñ–ª–æ. –î–æ–∑–≤–æ–ª—å —Å–æ–±—ñ ¬´–ø–æ—Ç—Ä—è—Å—Ç–∏—Å—è¬ª –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω ‚Äî "
                "—Ç–∞–∫ –Ω—ñ–±–∏ –∑ —Ç–µ–±–µ —Å–ø–∞–¥–∞—î –≤–µ—Å—å –∑–∞–π–≤–∏–π —Å—Ç—Ä–µ—Å.",
                reply_markup=back_to_menu_button()
            )

    await call.answer()